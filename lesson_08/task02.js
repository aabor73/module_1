'use strict';

// Продолжаем работать с предыдущей функцией
// Функция принимает еще два параметра n и m
// Числа m и n формируют диапазон, в пределах
// которого должно сгенерироваться числа для массиваm и n включительно
// Учтите, что n и m могут быть отрицательными, а также может быть n > m или n < m.

function generateRandomArray(n, m) {

    if (n > m) {
        [n, m] = [m, n];
        }

    const range = Math.abs(m - n) + 1;

	console.log(Array.from({
        length: 10
    },
        () => Math.floor(Math.random() * range) + n));
}

// Эта функция принимает два аргумента: n и m. 
// Она сначала проверяет, если n больше m, то меняет их местами, чтобы гарантировать, 
// что m всегда больше или равно n.
// Затем она вычисляет диапазон чисел, которые будут генерироваться, взяв абсолютное значение разницы между m и n (так как диапазон должен быть положительным числом) и добавив 1,
// чтобы включить конечные числа m и n.
// Далее функция использует Array.from для создания массива длиной 10,
//  заполняя его числами, каждое из которых является случайной величиной
//  в диапазоне от 0 до range - 1(поскольку Math.random возвращает числа от 0 до 1).
// Затем к каждому числу прибавляется n, чтобы сместить диапазон генерации на n.
// Это гарантирует, что все числа будут попадать в нужный диапазон.
// Затем эти числа возвращаются и выводятся в консоли.

generateRandomArray(-5, 10);